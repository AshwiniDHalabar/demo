---6.	Write a procedure to print ename and dname by passing empno and deptno. 
        If u pass invalid empno and valid deptno, it has to print ‘Invalid empno’ 
        and print dname. If u pass valid empno and invalid deptno, it has to print ename 
        and  ‘invalid deptno’. If u pass both valid then it has to print ename and dname. 
        If u pass both invalid then print ‘invalid empno’ and ‘invalid deptno’, also 
        include when others then exception.--------------
SELECT * FROM PATIENT1;
SELECT * FROM DOCTOR1;
SELECT * FROM APPOINTMENT1;

CREATE OR REPLACE PROCEDURE SP_PT(P_NO NUMBER,D_NO NUMBER)AS
DECLARE
P_NAME PATIENT1.PAT_NAME%TYPE;
D_NAME DOCTOR1.DOCTOR_NAME%TYPE;
P_NO PATIENT1.PAT_ID%TYPE;
D_NO DOCTOR1.DOC_ID%TYPE;
BEGIN
P_NO := 1001;
D_NO := 20;
    BEGIN
        SELECT DOCTOR_NAME INTO D_NAME FROM DOCTOR1
        WHERE DOC_ID=D_NO;
        DBMS_OUTPUT.PUT_LINE('DOCTOR EXISTS');
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('DOCTOR DOES NOT EXISTS');
    END;
SELECT PAT_NAME INTO P_NAME FROM PATIENT1
WHERE PAT_ID=P_NO;
DBMS_OUTPUT.PUT_LINE('PATIENT EXISTS');
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('DOCTOR DOES NOT EXISTS');
END;




--7.	Write a procedure to divide the salary of all employees by its commission 
and handle zero divide exception and also insert the divided value into a table, 
also include when others then exception.--------------------

CREATE OR REPLACE PROCEDURE SP_DIV AS
EMPSAL NUMBER;
EMPCOMM NUMBER;
ENO NUMBER;
V_COUNT NUMBER;
V_RESULT NUMBER(5);
CURSOR GET_DATA IS(SELECT SAL,COMM FROM EMP);
    BEGIN
    FOR I IN GET_DATA LOOP
    BEGIN
    V_RESULT := I.SAL/NVL(I.COMM,0);
    INSERT INTO T2 VALUES(V_RESULT);
    --DBMS_OUTPUT.PUT_LINE(V_RESULT);
    EXCEPTION
    WHEN ZERO_DIVIDE THEN
    DBMS_OUTPUT.PUT_LINE(SQLCODE||','||SQLERRM);
    END ;
    END LOOP;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('OTHERS');
END ;


SELECT * FROM T2;

EXEC SP_DIV;
SELECT * FROM EMP;
SET SERVEROUTPUT ON
DESC EMP;

CREATE TABLE T2
(RESULT NUMBER(20,3));


---8. WRITE A FUNCTION WHICH TAKES PAT_ID AS THE INPUT,IT SHOLUD RETURN THE AGE_GROUP OF PATIENTS 
			AGE IS BETWEEN 20 TO 35 --JUNIOR IN THE COMPANY
					35 TO 50 -- MID LEVEL IN THE COMPANY
					>50	--SENIOR IN THE COMPANY


CREATE OR REPLACE FUNCTION FUNC_EMP(V_PATNO NUMBER) RETURN VARCHAR2 AS
D_O_B DATE;
BEGIN
SELECT PAT_DOB INTO D_O_B FROM PATIENT1
WHERE PAT_ID=V_PATNO;
IF TO_CHAR(SYSDATE,'YYYY')- TO_CHAR(D_O_B,'YYYY') BETWEEN 20 AND 35 THEN
RETURN 'JUNIOR IN THE COMPANY';
ELSIF TO_CHAR(SYSDATE,'YYYY')- TO_CHAR(D_O_B,'YYYY') BETWEEN 35 AND 50 THEN
RETURN 'MIDDLE AGE IN THE COMPANY';
ELSIF TO_CHAR(SYSDATE,'YYYY')-TO_CHAR(D_O_B,'YYYY') >50 THEN
RETURN 'SENIOR IN THE COMPANY';
ELSE 
RETURN 'INVALID';
END IF;
END;

DESC PATIENT1;
SELECT FUNC_EMP(1005) FROM DUAL;

SELECT * FROM PATIENT1;