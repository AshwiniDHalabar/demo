--1)DISPLAY MONTH NAME WISE NO OF TRANSACTION IN THE LAST 3 YEARS--
SELECT TO_CHAR(TXN_DATE,'MM'),COUNT(TXN_ID)
FROM TRANSACTION
WHERE TO_CHAR(TXN_DATE,'YY')>TO_CHAR(SYSDATE,'YY')-3
GROUP BY TO_CHAR(TXN_DATE,'MM');

--2)Display customers who have their email in gmail domain.--
UPDATE TRANSACTION SET TXN_DATE='12-04-2019' WHERE TXN_ID=8;
SELECT TO_CHAR(SYSDATE,'YY')-3 FROM DUAL;
SELECT TRUNC(SYSDATE,'YY')-1 FROM DUAL;

SELECT * FROM CUST_TRANSACTION;
SELECT * FROM ACCOUNTSS;
SELECT * FROM TRANSACTION;

--QUERY--
SELECT CUST_NAME  FROM CUST_TRANSACTION
WHERE EMAIL LIKE '%GMAIL%';

--3)DISPLAY THE YOUNGEST CUSTOMER NAME IN EACH CITY--
SELECT CUST_NAME 
FROM CUST_TRANSACTION
WHERE (DOB,CITY) IN (SELECT MAX(DOB),CITY   
                FROM CUST_TRANSACTION
                GROUP BY CITY);

SELECT MAX(DOB) FROM CUST_TRANSACTION;

UPDATE CUST_TRANSACTION 
SET DOB='07-03-2021' WHERE CUST_BKEY=202;

--4)DISPLAY THE CITY NAMes THAT HAVE MORE NO OF CUSTOMERS THAN THE CITY HYD--
SELECT CITY,COUNT(CUST_BKEY)
FROM CUST_TRANSACTION 
GROUP BY CITY
HAVING COUNT(CUST_BKEY)>(SELECT (COUNT(CUST_BKEY))
                        FROM CUST_TRANSACTION 
                        WHERE CITY='BTM'
                        GROUP BY CITY);
                        
                        
                        
INSERT INTO CUST_TRANSACTION VALUES(207,'MAHESH','RR','M','MAHESH@GMAIL.COM','8273843644','Bangalore','KARNATAKA','INDIA','04-03-2022');

--5)DISPLAY THE CITY NMAE WISE  NO OF ACCOUNTS opened IN THE CURRENT YEAR and previous year--
SELECT CITY,COUNT(CASE WHEN TO_CHAR(ACT_OPEN_DATE,'YY')=TO_CHAR(SYSDATE,'YY') 
                    THEN A_NO
                    END)CURRENT_YEAR,
            COUNT(CASE WHEN TO_CHAR(ACT_OPEN_DATE,'YY')=TO_CHAR(SYSDATE,'YY')-1
                    THEN A_NO
                    END)PREVIOUS_YEAR
FROM CUST_TRANSACTION C,ACCOUNTSS A
WHERE C.CUST_BKEY=A.CUST_BKEY
GROUP BY CITY;

FROM CUST_TRANSACTION C ,ACCOUNTSS A
WHERE C.CUST_BKEY =A.CUST_BKEY AND 

GROUP BY CITY;
--6)display the statewise no of accounts and no of txns in the current year--
SELECT C.STATE,COUNT(A.A_NO)AS NO_OF_ACC,COUNT(T.TXN_ID)AS NO_OF_TXN
FROM CUST_TRANSACTION C,ACCOUNTSS A,TRANSACTION T
WHERE C.CUST_BKEY=A.CUST_BKEY AND A.A_NO=T.A_NO AND TO_CHAR(TXN_DATE,'YY')=TO_CHAR(SYSDATE,'YY')
GROUP BY C.STATE;

-7)DISPLAY THE CUSTOMER NAMES WHO HAVE MORE NO OF ACCOUNTS THAN THE CUSTOMER MIKE
SELECT COUNT(A_NO),CUST_NAME
FROM CUST_TRANSACTION C ,ACCOUNTSS A
WHERE C.CUST_BKEY =A.CUST_BKEY
GROUP BY CUST_NAME
HAVING COUNT(A_NO)>(SELECT COUNT(A_NO)
                    FROM CUST_TRANSACTION C ,ACCOUNTSS A
                    WHERE C.CUST_BKEY =A.CUST_BKEY
                    AND  CUST_NAME='MONI');
          
INSERT INTO ACCOUNTSS VALUES(3238,202,'CURRENT',2334,'12-05-2022','ACTIVE');     

--8)DISPLAY THE ACCOUNT TYPE WISE NO OF CUSTOMERS AND NO OF ACCOUNTS OPENED IN THE CURRENT YEAR--
SELECT DISTINCT ACT_TYPE,COUNT(C.CUST_BKEY),COUNT(A.A_NO)
FROM CUST_TRANSACTION C,ACCOUNTSS A 
WHERE C.CUST_BKEY=A.CUST_BKEY
AND  TO_CHAR(ACT_OPEN_DATE,'YY')=TO_CHAR(SYSDATE,'YY')
GROUP BY ACT_TYPE ;



UPDATE ACCOUNTSS SET ACT_TYPE='CURRENT' WHERE A_NO=206;
SELECT * FROM CUST_TRANSACTION;
SELECT * FROM ACCOUNTSS;
SELECT * FROM TRANSACTION;
--9)DISPLAY CUSTOMERS WHO HAVE ONLY SAVINGS ACCOUNT--
SELECT CUST_NAME
FROM CUST_TRANSACTION
WHERE CUST_BKEY IN (SELECT CUST_BKEY
                    FROM ACCOUNTSS
                    WHERE ACT_TYPE='SAVINGS' AND ACT_TYPE NOT IN 'CURRENT');
                    
SELECT CUST_NAME,COUNT(A_NO)
FROM CUST_TRANSACTION C,ACCOUNTSS A
WHERE C.CUST_BKEY=A.CUST_BKEY
AND ACT_TYPE='SAVINGS'
GROUP BY CUST_NAME
HAVING COUNT(A_NO)>1;


--10)DISPLAY THE CUSTOMER NAME WISE TOTAL WITHDRAW AND DEPOSIT AMOUNTS IN THE CURRENT MONTH. 
            THE T_TYPE COLUMN DIFFERENTIATES THE AMOUNTSS--
SELECT CUST_NAME,SUM(CASE WHEN TXN_TYPE='WITHDRAW' THEN FCY_AMT
                    END)WITHDRAW_AMT,
                SUM(CASE WHEN TXN_TYPE='DEBIT' THEN LCY_AMT
                END)DEPOSIT_AMT
        FROM CUST_TRANSACTION C,ACCOUNTSS A,TRANSACTION T
        WHERE C.CUST_BKEY=A.CUST_BKEY AND A.A_NO=T.A_NO
        GROUP BY CUST_NAME;