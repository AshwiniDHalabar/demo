SQL Questions:

SELECT * FROM CUST_TRANSACTION;
SELECT * FROM ACCOUNTSS;
SELECT * FROM TRANSACTION;
1.	Write a query to display all the customer names who do not have a phone
SELECT CUST_NAME
FROM CUST_TRANSACTION
WHERE PHONE IS NULL;

2.	Write a query to display all the customers and the number of accounts they hold
SELECT CUST_NAME,COUNT(A_NO)
FROM CUST_TRANSACTION C, ACCOUNTSS A
WHERE A.CUST_BKEY=C.CUST_BKEY 
GROUP BY CUST_NAME;

3.	Display the customer who have the highest balance across all account types
 SELECT CUST_NAME,MAX(BALANCE)
FROM CUST_TRANSACTION C, ACCOUNTSS A
WHERE A.CUST_BKEY=C.CUST_BKEY
GROUP BY CUST_NAME
HAVING MAX(BALANCE) = (SELECT MAX(BALANCE)
                    FROM ACCOUNTSS);
                    
ORDER BY MAX(BALANCE) DESC;                                           
                                            
4.	Display the customer name who have the highest balance in individual account types
SELECT CUST_NAME,ACT_TYPE,BALANCE
FROM CUST_TRANSACTION C, ACCOUNTSS A
WHERE A.CUST_BKEY=C.CUST_BKEY AND BALANCE IN 
                                                (SELECT MAX(BALANCE)
                                                FROM ACCOUNTSS
                                                GROUP BY ACT_TYPE);
                                                
5.	Display the State wise no of accounts opened in the previous year
SELECT STATE,COUNT(A_NO)
FROM CUST_TRANSACTION C, ACCOUNTSS A
WHERE A.CUST_BKEY=C.CUST_BKEY
AND TO_CHAR(ACT_OPEN_DATE,'YYYY')=TO_CHAR(SYSDATE,'YYYY')-1
GROUP BY STATE;

6.	Display the customers who hold more than 2 accounts of the same type
SELECT CUST_NAME,ACT_TYPE,COUNT(A_NO)
FROM CUST_TRANSACTION C, ACCOUNTSS A
WHERE A.CUST_BKEY=C.CUST_BKEY
GROUP BY CUST_NAME,ACT_TYPE
HAVING COUNT(A_NO)>1;

7.	Display customer name and transaction type wise transaction amounts. 
            (Consider two types of transactions which are Debit and Credit)
SELECT CUST_NAME,TXN_TYPE,SUM(FCY_AMT)
FROM CUST_TRANSACTION C,ACCOUNTSS A,TRANSACTION T
WHERE C.CUST_BKEY=A.CUST_BKEY AND A.A_NO=T.A_NO AND TXN_TYPE IN ('DEBIT','CREDIT')
GROUP BY TXN_TYPE,CUST_NAME;

8.	Display city wise no of male and female customers
select CITY,COUNT(CASE WHEN GENDER='M' THEN GENDER
                    END)MALE_COUNT,
            COUNT(CASE WHEN GENDER='F' THEN GENDER
                    END)FEMALE_COUNT
            FROM CUST_TRANSACTION
            GROUP BY CITY;
            
SELECT * FROM CUST_TRANSACTION;

9.	Display the customers who has only savings accout.
SELECT CUST_NAME,count(C.CUST_BKEY)
FROM CUST_TRANSACTION C,ACCOUNTSS A
WHERE C.CUST_BKEY=A.CUST_BKEY
AND ACT_TYPE='SAVINGS'
GROUP BY CUST_NAME
HAVING COUNT(C.CUST_BKEY)=1;

10.	Display the customerwise total deposit amount and total withdraw amount
Customer	Deposit_amt	Withdraw_amt
SELECT CUST_NAME,SUM(CASE WHEN TXN_TYPE='DEBIT' THEN FCY_AMT
                    END)DEPOSIT_AMT,
                SUM(CASE WHEN TXN_TYPE='WITHDRAW' THEN FCY_AMT
                    END)WITHDRAW_AMT
                FROM CUST_TRANSACTION C,ACCOUNTSS A,TRANSACTION T
WHERE C.CUST_BKEY=A.CUST_BKEY AND A.A_NO=T.A_NO
GROUP BY CUST_NAME; 

11.	Display the cities that have more number of customers than the city HYD.
SELECT CITY,COUNT(CUST_BKEY)
FROM CUST_TRANSACTION
GROUP BY CITY
HAVING COUNT(CUST_BKEY) >(SELECT COUNT(CUST_bkey)
FROM CUST_TRANSACTION
WHERE CITY='BTM');

12.	Display customers who have more number of accounts than customer ‘MANOJ’.
SELECT COUNT(A_NO),CUST_NAME
FROM ACCOUNTSS A,CUST_TRANSACTION C
WHERE A.CUST_BKEY=C.CUST_BKEY 
GROUP BY CUST_NAME
HAVING COUNT(A_NO)>(SELECT COUNT(A_NO)
                    FROM ACCOUNTSS A, CUST_TRANSACTION C
                    WHERE A.CUST_BKEY=C.CUST_BKEY AND CUST_NAME='ASH');
                    
13.	Display the common customers who made transactions in the current and previous month.
SELECT CUST_NAME
FROM CUST_TRANSACTION C,ACCOUNTSS A,TRANSACTION T
WHERE C.CUST_BKEY=A.CUST_BKEY AND A.A_NO=T.A_NO AND 
TO_CHAR(TXN_DATE,'MM')=TO_CHAR(SYSDATE,'MM')
INTERSECT
SELECT CUST_NAME
FROM CUST_TRANSACTION C,ACCOUNTSS A,TRANSACTION T
WHERE C.CUST_BKEY=A.CUST_BKEY AND A.A_NO=T.A_NO AND 
TO_CHAR(TXN_DATE,'MM')=TO_CHAR(SYSDATE,'MM')-1;

14.	Display statewise no of accounts and no of transactions in the current year
SELECT STATE,COUNT(A.A_NO),COUNT(T.TXN_ID)
FROM CUST_TRANSACTION C,ACCOUNTSS A,TRANSACTION T
WHERE C.CUST_BKEY=A.CUST_BKEY AND A.A_NO=T.A_NO
AND TO_CHAR(TXN_DATE,'YYYY')=TO_CHAR(SYSDATE,'YYYY')
GROUP BY STATE;

SELECT * FROM TRANSACTION;
SELECT TO_CHAR(SYSDATE,'MM')-1 FROM DUAL;
15.	Display customers who have their email in gmail domain.
SELECT CUST_NAME 
FROM CUST_TRANSACTION
WHERE EMAIL LIKE '%GMAIL%';

16.	Display the youngest customer in each city.
SELECT CUST_NAME
FROM CUST_TRANSACTION
WHERE (DOB,CITY) IN (SELECT MAX(DOB),CITY 
                    FROM CUST_TRANSACTION
                    GROUP BY CITY);
                    
17.	Display the account type wise no of customers and no of accounts opened in the current year.
SELECT ACT_TYPE,COUNT(C.CUST_BKEY),COUNT(A.A_NO)
FROM CUST_TRANSACTION C,ACCOUNTSS A
WHERE C.CUST_BKEY=A.CUST_BKEY AND TO_CHAR(ACT_OPEN_DATE,'YY')=TO_CHAR(SYSDATE,'YY')
GROUP BY ACT_TYPE;

18.	Display the customers who opened an account on birth day.
SELECT CUST_NAME
FROM CUST_TRANSACTION C,ACCOUNTSS A
WHERE C.CUST_BKEY=A.CUST_BKEY
AND TO_CHAR(DOB,'DD-MM-YYYY')=TO_CHAR(ACT_OPEN_DATE,'DD-MM-YYYY');
OR 
SELECT CUST_NAME
FROM CUST_TRANSACTION C,ACCOUNTSS A
WHERE C.CUST_BKEY=A.CUST_BKEY
AND DOB=ACT_OPEN_DATE;



select * from cust_transaction;
SELECT * FROM ACCOUNTSS;
SELECT * FROM TRANSACTION;
UPDATE CUST_TRANSACTION SET DOB='12-03-2022' WHERE CUST_BKEY=202;





update TRANSACTION set TXN_DATE='12-04-2022' where TXN_ID=5;
INSERT INTO TRANSACTION VALUES(23,4158,'CREDIT',300,3000,'12-04-2022');
commit;


