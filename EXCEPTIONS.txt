--TO ACCESS ALL THE COLUMNS IN THE TABLE OF SINGLE ROW USING ROW TYPE
CREATE OR REPLACE PROCEDURE SO_MANYCOLUMNS(C_CITY VARCHAR2) AS 
V_REC CUSTOMER_RETAIL % ROWTYPE;
BEGIN 
SELECT * INTO V_REC
FROM CUSTOMER_RETAIL
WHERE CUST_CITY=C_CITY;
DBMS_OUTPUT.PUT_LINE(V_REC.CUST_NAME||','||V_REC.CUST_CITY||','||V_REC.CUST_ADDRESS);
EXCEPTION
WHEN TOO_MANY_ROWS THEN
DBMS_OUTPUT.PUT_LINE('MANY ROWS ARE NOT SELECTED');
END;

EXEC SO_MANYCOLUMNS('hassan');

SELECT * FROM CUSTOMER_RETAIL;

---------------------------------------------------------------------------------------
--VALUE ERROR --
CREATE OR REPLACE PROCEDURE SP_VALERROR(A_N PRODUCT_RETAIL.PROD_ID%TYPE) AS
COST_P PRODUCT_RETAIL.COST%TYPE;
BEGIN
SELECT  P_NAME INTO COST_P
FROM PRODUCT_RETAIL
WHERE PROD_ID=A_N;
DBMS_OUTPUT.PUT_LINE('PROD_NAME IS : '|| COST_P);
EXCEPTION 
WHEN VALUE_ERROR THEN
--DBMS_OUTPUT.PUT_LINE(SQLCODE || ' ' || SQLERRM);
RAISE_APPLICATION_ERROR(-20001,'DATATYPE_ERROR');
END;

EXEC SP_VALERROR(100);

-----------------------------------------------------------------------------------------
---NO_DATA FOUND---
CREATE OR REPLACE PROCEDURE SP_DUP(A NUMBER) AS
PRO_NAME VARCHAR2(20);
BEGIN
SELECT P_NAME INTO PRO_NAME FROM PRODUCT_RETAIL
WHERE PROD_ID=A;
DBMS_OUTPUT.PUT_LINE(PRO_NAME);
EXCEPTION 
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('NO DATA EXISTS IN TABLE');
END;

SELECT * FROM PRODUCT_RETAIL;
SET SERVEROUTPUT ON
EXEC SP_DUP(1);

-------------------------------------------------------------------------------------
--TOO MANY ROWS---
CREATE OR REPLACE PROCEDURE SP_TOOMANY(A_F VARCHAR2) AS
PROD_NAME VARCHAR2(20);
BEGIN
SELECT P_NAME INTO PROD_NAME 
FROM PRODUCT_RETAIL
WHERE P_FAMILY=A_F;
DBMS_OUTPUT.PUT_LINE(PROD_NAME);
EXCEPTION
WHEN TOO_MANY_ROWS THEN
DBMS_OUTPUT.PUT_LINE('FETCHING TOO MANY ROWS');
END;

SET SERVEROUTPUT ON
EXEC SP_TOOMANY('Furniture');

SELECT * FROM PRODUCT_RETAIL;
-----------------------------------------------------------------
--VALUE ERROR--
CREATE OR REPLACE PROCEDURE SP_TOMANY(A_F VARCHAR2) AS
PRIC NUMBER(1);
BEGIN 
SELECT PRICE INTO PRIC
FROM PRODUCT_RETAIL
WHERE A_F=PROD_ID;
DBMS_OUTPUT.PUT_LINE(PRIC);
EXCEPTION 
WHEN VALUE_ERROR THEN
DBMS_OUTPUT.PUT_LINE('VALUE ERROR');
END;

EXEC SP_TOMANY(100);

------------------------------------------------------------------------------------------------
SELECT * FROM PRODUCT_RETAIL;
--INVALID NUMBER--
CREATE OR REPLACE PROCEDURE SP_INVAID AS
NAME  VARCHAR2(20);
BEGIN
SELECT P_NAME INTO NAME
FROM PRODUCT_RETAIL 
WHERE PROD_ID='XYS';
DBMS_OUTPUT.PUT_LINE(NAME);
EXCEPTION 
WHEN INVALID_NUMBER THEN
DBMS_OUTPUT.PUT_LINE('ENTERING INVALID DATATYPES');
END;

EXEC SP_INVAID;
SET SERVEROUTPUT ON

---INVALID NUMBER---
create table abc(name varchar2(10),sal number);
DECLARE
begin
insert into abc values('XYZ','xyz');
exception
when invalid_number then
dbms_output.put_line('You are using invaid datatyes');
end;